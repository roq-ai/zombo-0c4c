generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model doctor {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String        @db.VarChar(255)
  specialization  String        @db.VarChar(255)
  availability    Boolean       @default(false)
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model favorite_organization {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String?       @db.Uuid
  organization_id String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id                    String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description           String?                 @db.VarChar(255)
  image                 String?                 @db.VarChar(255)
  name                  String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  user_id               String                  @db.Uuid
  tenant_id             String                  @db.VarChar(255)
  doctor                doctor[]
  favorite_organization favorite_organization[]
  user                  user                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  favorite_organization favorite_organization[]
  organization          organization[]
}
